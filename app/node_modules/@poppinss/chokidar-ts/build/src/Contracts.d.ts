import tsStatic from 'typescript';
/**
 * Shape of Plugin function
 */
export declare type PluginFn = (ts: typeof tsStatic, config: tsStatic.CompilerOptions) => tsStatic.TransformerFactory<tsStatic.SourceFile> | tsStatic.CustomTransformerFactory;
/**
 * Shape of an import reference. The version is required to
 * find between stale dependencies without running
 * unnecessary loops
 */
export declare type ImportReferenceNode = {
    version: number;
    modulePath: string;
};
/**
 * Options accepted by source files manager
 */
export declare type SourceFilesManagerOptions = {
    includes?: string[];
    excludes?: string[];
    files: string[];
};
/**
 * Events emitted by the watcher
 */
export declare type WatcherEvents = {
    'add': string;
    'change': string;
    'unlink': string;
    'source:unlink': string;
    'subsequent:build': {
        path: string;
        skipped: boolean;
        diagnostics: tsStatic.Diagnostic[];
    };
};
